version: "3.8"
services:
  dev-database:
    container_name: hhplus-reservation-dev-database
    build:
      context: ./database
    image: mysql:8.0.33
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=hhplus-reservation-dev-database
      - MYSQL_ROOT_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - TZ=Asia/Seoul
    volumes:
      - ./database/config:/etc/mysql/conf.d
      - ./database/config/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3302:3306"

  stage-database:
    container_name: hhplus-reservation-stage-database
    build:
      context: ./database
    image: mysql:8.0.33
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=hhplus-reservation-stage-database
      - MYSQL_ROOT_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - TZ=Asia/Seoul
    volumes:
      - ./database/config:/etc/mysql/conf.d
      - ./database/config/init-stage.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3301:3306"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    restart: unless-stopped
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  create-topics:
    image: confluentinc/cp-kafka:latest
    hostname: create-topics
    container_name: create-topics
    depends_on:
      - broker
    command: "
      bash -c 'cub kafka-ready -b broker:29092 1 120 && \
      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --partitions 2 --replication-factor 1 --topic concert-reservation-payment'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - broker
    ports:
      - "8092:8080"
    restart: unless-stopped
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181



  reids:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    restart: unless-stopped
    ports:
      - "8001:8001"