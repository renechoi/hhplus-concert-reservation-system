spring:
  profiles:
    active: stage
  application:
    name: queue-management-service
  cloud:
    function:
      definition: concertReservationPaymentConsumer;
    stream:
      kafka:
        default:
          consumer:
            autoCommitOffset: false
        binder:
          brokers:
            - localhost:9092
      bindings:
        concertReservationPaymentConsumer-in-0:
          destination: concert-reservation-payment
          group: concert-reservation-payment-group
  redis:
    host: localhost
    port: 6379



eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:24010/eureka/
  instance:
    preferIpAddress: true

server:
  port: 24031
  servlet:
    context-path: /queue-management

waiting-queue:
  policy:
    max-limit: 10000
    token-expiry-as-seconds: 300

processing-queue:
  policy:
    max-limit: 1000
    token-expiry-as-seconds: 30


scheduler:
  queueTransferRate: 1000  # 1초마다 실행
  expireTokensRate: 1000   # 1초마다 실행



custom-logging-filter:
  enabled: true


slack:
  channel:
    name: slack-test






management:
  endpoints:
    web:
      exposure:
        include: prometheus
  prometheus:
    metrics:
      export:
        enabled: true
