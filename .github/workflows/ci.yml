name: CI Pipeline

on:
  push:
    branches:
      - github-action-ci
  pull_request:
    branches:
      - github-action-ci

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew in all modules
        run: |
          for dir in */ ; do
            if [ -f "$dir/gradlew" ]; then
              chmod +x "$dir/gradlew"
            fi
          done

      - name: Build All Modules
        run: |
          for dir in */ ; do
            if [ -f "$dir/build.gradle" ]; then
              echo "Building $dir"
              (cd "$dir" && ./gradlew build -x test)
            fi
          done

#      - name: Test All Modules
#        run: |
#          for dir in */ ; do
#            if [ -f "$dir/build.gradle" ]; then
#              echo "Testing $dir"
#              (cd "$dir" && ./gradlew test)
#            fi
#          done
#
#      - name: Display test logs
#        run: |
#          for dir in */ ; do
#            if [ -f "${dir%/}_test.log" ]; then
#              echo "Test logs for $dir"
#              cat "${dir%/}_test.log"
#            fi
#          done
#
#      - name: Stop All Services
#        run: |
#          docker-compose down


  slack_notification:
    if: ${{ always() }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up CUSTOM_STATUS
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            BUILD_NAME="Production Deploy"
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            BUILD_NAME="Staging Deploy"
          else
            BUILD_NAME="Local Build & Test"
          fi

          if [ "${{ needs.build.result }}" = "failure" ]; then
            CUSTOM_STATUS="Failure"
            SLACK_EMOJI=":boom:"
          elif [ "${{ needs.build.result }}" = "cancelled" ]; then
            CUSTOM_STATUS="Cancelled"
            SLACK_EMOJI=":exclamation:"
          else
            CUSTOM_STATUS="Success"
            SLACK_EMOJI=":rocket:"
          fi

          echo "CUSTOM_STATUS=${CUSTOM_STATUS}" >> $GITHUB_ENV
          echo "BUILD_NAME=${BUILD_NAME}" >> $GITHUB_ENV
          echo "SLACK_EMOJI=${SLACK_EMOJI}" >> $GITHUB_ENV

      - name: Send Slack Message
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: dev
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/github.png
          SLACK_USERNAME: GitHub CI/CD
          SLACK_TITLE: '${{ env.SLACK_EMOJI }} ${{ env.BUILD_NAME }}: ${{ env.CUSTOM_STATUS }} ${{ env.SLACK_EMOJI }}'
          MSG_MINIMAL: ref,commit,actions url
